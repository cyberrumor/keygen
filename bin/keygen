#!/usr/bin/env python3
import argparse
from pathlib import Path

import mido
import midi_abstraction as mab

import keygen

TICKS = 256


def main(dest: Path, tonic: mab.Note, mode: mab.Mode) -> None:
    key = getattr(mab, mode.value.upper())
    scale = key.notes(tonic)

    mid = mido.MidiFile(type=1, ticks_per_beat=TICKS)
    mid.tracks.append(keygen.generate(scale, TICKS))

    mid.save(dest)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog=f"{Path(__file__).name}",
        description="Generate midi",
    )

    parser.add_argument(
        "DEST",
        type=Path,
        help="the name of the output file",
    )

    parser.add_argument(
        "--tonic",
        type=mab.Note,
        help="the root note of the scale.",
        required=True,
        choices=[i.value for i in list(mab.Note)],
    )

    parser.add_argument(
        "--mode",
        type=mab.Mode,
        help="the mode of the scale.",
        required=True,
        choices=[i.value for i in list(mab.Mode)],
    )

    args = parser.parse_args()

    # Ensure DEST doesn't already exist.
    if args.DEST is not None:
        if args.DEST.absolute().exists():
            raise FileExistsError(args.DEST)


    main(args.DEST, args.tonic, args.mode)

